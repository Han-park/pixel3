{"ast":null,"code":"var _jsxFileName = \"/Users/hanpark/Desktop/pixel-web/my-app/src/components/post/postBody.js\";\nimport * as React from 'react';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostBody(props) {\n  var render = [];\n  var i = 0;\n\n  for (i; i < props.data.item.description.length; i++) {\n    switch (props.data.item.description[i].type) {\n      case 'text':\n        const splitedArray = props.data.item.description[i].content.split('<br/>');\n        render.push( /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            pb: 0,\n            pt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            sx: {\n              mt: 0,\n              mb: 0\n            },\n            children: splitedArray.map((string, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: string\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this));\n        break;\n\n      case 'image':\n        render.push( /*#__PURE__*/_jsxDEV(CardMedia, {\n          sx: {\n            width: '500px',\n            display: 'block',\n            marginRight: 'auto',\n            marginLeft: 'auto',\n            objectFit: 'contain',\n            mt: 2,\n            mb: 2\n          },\n          component: \"img\",\n          image: props.data.item.description[i].content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this));\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_c = PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/Users/hanpark/Desktop/pixel-web/my-app/src/components/post/postBody.js"],"names":["React","CardMedia","CardContent","Typography","PostBody","props","render","i","data","item","description","length","type","splitedArray","content","split","push","pb","pt","mt","mb","map","string","index","width","display","marginRight","marginLeft","objectFit"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEvC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,CAAC,GAAG,CAAR;;AAGE,OAAKA,CAAL,EAAQA,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,WAAhB,CAA4BC,MAAxC,EAAgDJ,CAAC,EAAjD,EAAoD;AAClD,YAAQF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,WAAhB,CAA4BH,CAA5B,EAA+BK,IAAvC;AACE,WAAK,MAAL;AAEE,cAAMC,YAAY,GAAGR,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,WAAhB,CAA4BH,CAA5B,EAA+BO,OAA/B,CAAuCC,KAAvC,CAA6C,OAA7C,CAArB;AAGAT,QAAAA,MAAM,CAACU,IAAP,eACE,QAAC,WAAD;AAAqB,UAAA,EAAE,EAAE;AAACC,YAAAA,EAAE,EAAE,CAAL;AAAQC,YAAAA,EAAE,EAAE;AAAZ,WAAzB;AAAA,iCACA,QAAC,UAAD;AAAY,YAAA,SAAS,MAArB;AAAsB,YAAA,EAAE,EAAE;AAACC,cAAAA,EAAE,EAAE,CAAL;AAAQC,cAAAA,EAAE,EAAE;AAAZ,aAA1B;AAAA,sBAEGP,YAAY,CAACQ,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBACd;AAAA,wBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,oBADH;AAFH;AAAA;AAAA;AAAA;AAAA;AADA,WAAkBf,CAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAUF;;AAEA,WAAK,OAAL;AACGD,QAAAA,MAAM,CAACU,IAAP,eACC,QAAC,SAAD;AAAmB,UAAA,EAAE,EAAE;AAACQ,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,OAAO,EAAE,OAA1B;AAAmCC,YAAAA,WAAW,EAAE,MAAhD;AAAwDC,YAAAA,UAAU,EAAE,MAApE;AAA4EC,YAAAA,SAAS,EAAE,SAAvF;AAAkGT,YAAAA,EAAE,EAAE,CAAtG;AAAyGC,YAAAA,EAAE,EAAE;AAA7G,WAAvB;AAAwI,UAAA,SAAS,EAAC,KAAlJ;AAAwJ,UAAA,KAAK,EAAEf,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,WAAhB,CAA4BH,CAA5B,EAA+BO;AAA9L,WAAgBP,CAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AAGH;AAtBF;AAwBD;;AAEC,sBACE;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;KAtCuBF,Q","sourcesContent":["import * as React from 'react';\n\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\n\n\nimport Typography from '@mui/material/Typography';\n\n\nexport default function PostBody(props){\n\nvar render = [];\nvar i = 0;\n\n\n  for (i; i < props.data.item.description.length; i++){\n    switch (props.data.item.description[i].type){\n      case 'text':\n\n        const splitedArray = props.data.item.description[i].content.split('<br/>')      \n    \n\n        render.push(\n          <CardContent key={i} sx={{pb: 0, pt: 1}}>\n          <Typography paragraph sx={{mt: 0, mb: 0}}>   \n\n            {splitedArray.map((string, index) => (\n                <div>{string}</div>\n            ))}\n              </Typography>\n              </CardContent>      \n          );\n      break;\n\n      case 'image':\n         render.push(\n          <CardMedia key={i} sx={{width: '500px', display: 'block', marginRight: 'auto', marginLeft: 'auto', objectFit: 'contain', mt: 2, mb: 2}} component='img' image={props.data.item.description[i].content}/>\n          );\n      break;\n    }\n  }\n\n    return(\n      <div>\n        {render}\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}